=============================
Некоторая полезная информация
=============================
1) Различие учительских и ученических аккаунтов
Единственным отличием является право создавать и редактировать группы. Таким образом, учитель имеет право
создать группу, добавить в нее работы и создать объявления. Также только создатель группы может видеть
ссылку-приглашение в свою группу, которая генерируется автоматически. Ученик в свою очередь не может
создавать и владеть группами (даже через API!)

2) Предсозданные аккаунты
Были созданы специальные аккаунты, которые более наглядно демонстрируют сайт и его функционал 
(особенно систему с группами).
Всего таких аккаунтов пять. Два из них - учительские (т.е те, которые могут создавать группы),
а остальные три - ученические
Почта и пароль для каждого аккаунта (первый и второй аккаунты учительские):
1. first_teacher@mail.ru - first_teacher [содержит больше всего информации]
2. second_teacher@mail.ru - second_teacher
3. first_example@mail.ru - first_example [содержит больше всего информации]
4. second_example@mail.ru - second_example
5. third_example@mail.ru - third_example

3) API сайта
Адрес API сайта: /api/{категория}/[аргументы]
У сайта есть API для 3 категорий: пользователи, группы, новости
Сообщения об ошибках содержат более детальную информацию о том, в каком месте пользователь
ошибся при вводе запроса

1. Пользователи
Доступные операции: вывод списка информации о всех пользователях; вывод информации об одном
пользователе; создание, редактирование и удаление пользователя
- Вывод списка информации о всех пользователях: print(get('http://{адрес}/api/users').json())
- Вывод информации об одном пользователе: print(get('http://{адрес}/api/users/{id}').json())
- Создание пользователя: print(post('http://{адрес}/api/users', json={
	'name': str,
	'surname': str,
	'email': str,
	'password': str,
	'is_teacher': bool
  }).json())
- Редактирование пользователя: print(put('http://{адрес}/api/users/{id}', json={
	'name': str,
	'surname': str,
	'email': str,
	'password': str
  }).json())
Необязательно вводить все параметры! Если какой-либо из параметров пропущен, то он у пользователя
останется неизмененным
- Удаление пользователя: print(delete('http://{адрес}/api/users/{id}').json())

2. Группы
Доступные операции: вывод списка информации о всех группах; вывод информации об одной
группе; создание, редактирование и удаление группы
- Вывод списка информации о всех группах: print(get('http://{адрес}/api/groups').json())
- Вывод информации об одной группе: print(get('http://{адрес}/api/groups/{id}').json())
- Создание группы: print(post('http://{адрес}/api/groups', json={
	'name': str,
	'description': str,
	'user_id': str | int
  }).json())
- Редактирование группы: print(put('http://{адрес}/api/groups/{id}', json={
	'name': str,
	'description': str,
	'user_id': str | int
  }).json())
Необязательно вводить все параметры! Если какой-либо из параметров пропущен, то он у группы
останется неизмененным
- Удаление группы: print(delete('http://{адрес}/api/groups/{id}').json())

3. Новости
Доступные операции: вывод информации о новости; создание и редактирование новости (мин./макс. новостей - 1)
- Вывод информации о новости print(get('http://{адрес}/api/news').json())
- Создание новости: print(post('http://{адрес}/api/news', json={
	'name': str,
	'content': str,
	'image': str # (путь к картинке, находящиеся в пределах папки с проектом)
  }).json())
- Редактирование новости: print(put('http://{адрес}/api/news', json={
	'name': str,
	'content': str,
	'image': str # (путь к картинке, находящиеся в пределах папки с проектом)
  }).json())
Необязательно вводить все параметры! Если какой-либо из параметров пропущен, то он у новости
останется неизмененным








